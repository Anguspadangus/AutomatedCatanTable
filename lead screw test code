# -*- coding: utf-8 -*-
"""
Created on Thu Jan 25 20:40:20 2024

@author: Owen Porpora
"""

import time
from RpiMotorLib import RpiMotorLib

# Define your pin assignments
MOTOR_DIRECTION_PIN = 20  # DIR
MOTOR_STEP_PIN = 21  # STP
GPIO_pins = (14, 15, 18)  # Microstep Resolution MS1-MS3 -> GPIO Pin

# Declare motor as a global variable
motor = None

def setup_gpio():
    global motor
    motor = RpiMotorLib.A4988Nema(MOTOR_DIRECTION_PIN, MOTOR_STEP_PIN, GPIO_pins, "Full")

def set_direction(direction):
    if direction == 'left':
        motor.motor_go(False, "Full", 50, 0.01, False, 10)
    elif direction == 'right':
        motor.motor_go(True, "Full", 50, 0.01, False, 10)

def step_motor(steps):
    motor.motor_go(True, "Full", 50, 0.01, False, steps)

def cleanup_gpio():
    motor.motor_stop()

def main():
    try:
        setup_gpio()

        direction = input("Enter direction (left/right): ").lower()
        steps = int(input("Enter the number of steps: "))

        set_direction(direction)
        step_motor(steps)

    except ValueError:
        print("Invalid input. Please enter a valid number of steps.")
    except KeyboardInterrupt:
        print("Program interrupted by the user.")
    finally:
        cleanup_gpio()

if __name__ == "__main__":
    main()
