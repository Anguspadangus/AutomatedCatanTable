import time
import RPi.GPIO as GPIO

# Pin assignments
MOTOR_DIRECTION_PIN = 20  # DIR
MOTOR_STEP_PIN = 21  # STP

# Constants
distance_per_step = 0.2  # Distance moved per step in mm

def setup_gpio():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(MOTOR_DIRECTION_PIN, GPIO.OUT)  # Direction
    GPIO.setup(MOTOR_STEP_PIN, GPIO.OUT)       # Step

def set_direction(direction):
    if direction == 'up':
        GPIO.output(MOTOR_DIRECTION_PIN, GPIO.LOW)   # Set to LOW for counterclockwise
    elif direction == 'down':
        GPIO.output(MOTOR_DIRECTION_PIN, GPIO.HIGH)  # Set to HIGH for clockwise
    else:
        print("Invalid direction. Please enter 'up' or 'down'.")
        return

def step_motor(steps, step_delay=0.0005):
    for _ in range(steps):
        GPIO.output(MOTOR_STEP_PIN, GPIO.HIGH)
        time.sleep(step_delay)
        GPIO.output(MOTOR_STEP_PIN, GPIO.LOW)
        time.sleep(step_delay)

def cleanup_gpio():
    GPIO.cleanup()

def main():
    try:
        setup_gpio()

        direction = input("Enter direction (up/down): ").lower()
        distance = float(input("Enter distance in millimeters: "))

        set_direction(direction)

        # Calculate the number of steps required based on distance
        steps = int(abs(distance) / distance_per_step)

        step_motor(steps)

    except ValueError:
        print("Invalid input. Please enter a valid distance.")
    except KeyboardInterrupt:
        print("Program interrupted by the user.")
    finally:
        cleanup_gpio()

if __name__ == "__main__":
    main()
