import time
import board
from adafruit_motorkit import MotorKit

# Initialize MotorKit
kit = MotorKit(i2c=board.I2C())

def move_stepper(steps):
    if steps > 0:
        # Move forward
        for _ in range(steps):
            kit.stepper1.onestep()
            time.sleep(0.01)
    elif steps < 0:
        # Move backward
        for _ in range(abs(steps)):
            kit.stepper1.onestep(direction=stepper.BACKWARD)
            time.sleep(0.01)

# Example: Move 50 steps forward
move_stepper(50)

# Example: Move 30 steps backward
move_stepper(-30)

import time
import board
from adafruit_motorkit import MotorKit
from adafruit_motor import stepper

# Constants
step_angle = 1.8  # Step angle in degrees
distance_per_step = 0.1  # Distance moved per step in cm

# Calculate steps based on distance and step angle
def calculate_steps(distance):
    return int(distance / distance_per_step)

# Initialize MotorKit
kit = MotorKit(i2c=board.I2C())

# Input distance (positive or negative)
input_distance = float(input("Enter distance in centimeters: "))

# Calculate steps based on input distance
steps = calculate_steps(input_distance)

# Move forward or backward based on the sign of the input distance
if input_distance > 0:
    # Move forward
    for _ in range(steps):
        kit.stepper1.onestep()
        time.sleep(0.01)
elif input_distance < 0:
    # Move backward
    for _ in range(abs(steps)):
        kit.stepper1.onestep(direction=stepper.BACKWARD)
        time.sleep(0.01)
else:
    print("Input distance should be non-zero.")
